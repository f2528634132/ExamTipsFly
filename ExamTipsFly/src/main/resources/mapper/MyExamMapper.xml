<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fly.fankun.mapper.MyExamMapper" >
  <resultMap id="BaseResultMap" type="com.fly.fankun.model.entity.MyExam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="exam_id" property="examId" jdbcType="INTEGER" />
    <result column="person_id" property="personId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatatime" property="updatatime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, exam_id, person_id, status, createtime, updatatime, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from my_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from my_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fly.fankun.model.entity.MyExam" >
    insert into my_exam (id, exam_id, person_id, 
      status, createtime, updatatime, 
      deleted)
    values (#{id,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatatime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fly.fankun.model.entity.MyExam" >
    insert into my_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="personId != null" >
        person_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatatime != null" >
        updatatime,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="examId != null" >
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatatime != null" >
        #{updatatime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.fankun.model.entity.MyExam" >
    update my_exam
    <set >
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatatime != null" >
        updatatime = #{updatatime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.fankun.model.entity.MyExam" >
    update my_exam
    set exam_id = #{examId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatatime = #{updatatime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <resultMap id="QueryMyExamResultMap" type="com.fly.fankun.model.vo.outVo.MyExamOutVo" >
    <result column="id"  property="id" jdbcType="INTEGER"/>
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <collection property="examTipsOutVoList" column="person_id" ofType="com.fly.fankun.model.vo.outVo.ExamTipsOutVo"
        select="com.fly.fankun.mapper.ExamTipsMapper.selectByPrimaryKey" />
  </resultMap>
  <select id="queryMyExam" resultMap="QueryMyExamResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from my_exam where person_id = #{userId,jdbcType=INTEGER} and deleted = 0
    order by createtime desc
  </select>

  <select id="queryByExamIdAndPersonId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from my_exam where person_id = #{personId,jdbcType=INTEGER} and exam_id = #{examId,jdbcType=INTEGER}
  </select>

  <select id="queryByExamId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from my_exam
    <where>
      and  deleted = 0
      <if test="list != null ">
        and  exam_id in(
        <foreach collection="list" item="list" separator=",">
          #{list}
        </foreach>
      </if>)
  </where>
  </select>
  <update id="updateBatchStatus" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";">
      update my_exam
      set
      status =  #{item.status,jdbcType=INTEGER},
      update_time = now()
      where id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>