<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fly.fankun.mapper.ExamHotMapper" >
  <resultMap id="BaseResultMap" type="com.fly.fankun.model.entity.ExamHot" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="exam_tip_id" property="examTipId" jdbcType="INTEGER" />
    <result column="person_id" property="personId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, exam_tip_id, person_id, create_time, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam_hot
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_hot
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fly.fankun.model.entity.ExamHot" >
    insert into exam_hot (id, exam_tip_id, person_id, 
      create_time, update_time, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{examTipId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fly.fankun.model.entity.ExamHot" >
    insert into exam_hot
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="examTipId != null" >
        exam_tip_id,
      </if>
      <if test="personId != null" >
        person_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="examTipId != null" >
        #{examTipId,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.fankun.model.entity.ExamHot" >
    update exam_hot
    <set >
      <if test="examTipId != null" >
        exam_tip_id = #{examTipId,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.fankun.model.entity.ExamHot" >
    update exam_hot
    set exam_tip_id = #{examTipId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>